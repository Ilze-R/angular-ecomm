{"ast":null,"code":"'use strict';\n\nvar $ = require('../internals/export');\n\nvar call = require('../internals/function-call');\n\nvar anObject = require('../internals/an-object');\n\nvar aCallable = require('../internals/a-callable');\n\nvar $TypeError = TypeError; // `Set.prototype.update` method\n// https://github.com/tc39/proposal-collection-methods\n\n$({\n  target: 'Map',\n  proto: true,\n  real: true,\n  forced: true\n}, {\n  update: function update(key, callback\n  /* , thunk */\n  ) {\n    var map = anObject(this);\n    var get = aCallable(map.get);\n    var has = aCallable(map.has);\n    var set = aCallable(map.set);\n    var length = arguments.length;\n    aCallable(callback);\n    var isPresentInMap = call(has, map, key);\n\n    if (!isPresentInMap && length < 3) {\n      throw $TypeError('Updating absent value');\n    }\n\n    var value = isPresentInMap ? call(get, map, key) : aCallable(length > 2 ? arguments[2] : undefined)(key, map);\n    call(set, map, key, callback(value, key, map));\n    return map;\n  }\n});","map":{"version":3,"sources":["/Users/i/Desktop/angular/ang-full-ecom/03-frontend/angular-ecommerce/node_modules/core-js-pure/modules/esnext.map.update.js"],"names":["$","require","call","anObject","aCallable","$TypeError","TypeError","target","proto","real","forced","update","key","callback","map","get","has","set","length","arguments","isPresentInMap","value","undefined"],"mappings":"AAAA;;AACA,IAAIA,CAAC,GAAGC,OAAO,CAAC,qBAAD,CAAf;;AACA,IAAIC,IAAI,GAAGD,OAAO,CAAC,4BAAD,CAAlB;;AACA,IAAIE,QAAQ,GAAGF,OAAO,CAAC,wBAAD,CAAtB;;AACA,IAAIG,SAAS,GAAGH,OAAO,CAAC,yBAAD,CAAvB;;AAEA,IAAII,UAAU,GAAGC,SAAjB,C,CAEA;AACA;;AACAN,CAAC,CAAC;AAAEO,EAAAA,MAAM,EAAE,KAAV;AAAiBC,EAAAA,KAAK,EAAE,IAAxB;AAA8BC,EAAAA,IAAI,EAAE,IAApC;AAA0CC,EAAAA,MAAM,EAAE;AAAlD,CAAD,EAA2D;AAC1DC,EAAAA,MAAM,EAAE,SAASA,MAAT,CAAgBC,GAAhB,EAAqBC;AAAS;AAA9B,IAA6C;AACnD,QAAIC,GAAG,GAAGX,QAAQ,CAAC,IAAD,CAAlB;AACA,QAAIY,GAAG,GAAGX,SAAS,CAACU,GAAG,CAACC,GAAL,CAAnB;AACA,QAAIC,GAAG,GAAGZ,SAAS,CAACU,GAAG,CAACE,GAAL,CAAnB;AACA,QAAIC,GAAG,GAAGb,SAAS,CAACU,GAAG,CAACG,GAAL,CAAnB;AACA,QAAIC,MAAM,GAAGC,SAAS,CAACD,MAAvB;AACAd,IAAAA,SAAS,CAACS,QAAD,CAAT;AACA,QAAIO,cAAc,GAAGlB,IAAI,CAACc,GAAD,EAAMF,GAAN,EAAWF,GAAX,CAAzB;;AACA,QAAI,CAACQ,cAAD,IAAmBF,MAAM,GAAG,CAAhC,EAAmC;AACjC,YAAMb,UAAU,CAAC,uBAAD,CAAhB;AACD;;AACD,QAAIgB,KAAK,GAAGD,cAAc,GAAGlB,IAAI,CAACa,GAAD,EAAMD,GAAN,EAAWF,GAAX,CAAP,GAAyBR,SAAS,CAACc,MAAM,GAAG,CAAT,GAAaC,SAAS,CAAC,CAAD,CAAtB,GAA4BG,SAA7B,CAAT,CAAiDV,GAAjD,EAAsDE,GAAtD,CAAnD;AACAZ,IAAAA,IAAI,CAACe,GAAD,EAAMH,GAAN,EAAWF,GAAX,EAAgBC,QAAQ,CAACQ,KAAD,EAAQT,GAAR,EAAaE,GAAb,CAAxB,CAAJ;AACA,WAAOA,GAAP;AACD;AAfyD,CAA3D,CAAD","sourcesContent":["'use strict';\nvar $ = require('../internals/export');\nvar call = require('../internals/function-call');\nvar anObject = require('../internals/an-object');\nvar aCallable = require('../internals/a-callable');\n\nvar $TypeError = TypeError;\n\n// `Set.prototype.update` method\n// https://github.com/tc39/proposal-collection-methods\n$({ target: 'Map', proto: true, real: true, forced: true }, {\n  update: function update(key, callback /* , thunk */) {\n    var map = anObject(this);\n    var get = aCallable(map.get);\n    var has = aCallable(map.has);\n    var set = aCallable(map.set);\n    var length = arguments.length;\n    aCallable(callback);\n    var isPresentInMap = call(has, map, key);\n    if (!isPresentInMap && length < 3) {\n      throw $TypeError('Updating absent value');\n    }\n    var value = isPresentInMap ? call(get, map, key) : aCallable(length > 2 ? arguments[2] : undefined)(key, map);\n    call(set, map, key, callback(value, key, map));\n    return map;\n  }\n});\n"]},"metadata":{},"sourceType":"script"}