{"ast":null,"code":"var call = require('../internals/function-call');\n\nvar aCallable = require('../internals/a-callable');\n\nvar anObject = require('../internals/an-object');\n\nvar tryToString = require('../internals/try-to-string');\n\nvar getIteratorMethod = require('../internals/get-iterator-method');\n\nvar $TypeError = TypeError;\n\nmodule.exports = function (argument, usingIterator) {\n  var iteratorMethod = arguments.length < 2 ? getIteratorMethod(argument) : usingIterator;\n  if (aCallable(iteratorMethod)) return anObject(call(iteratorMethod, argument));\n  throw $TypeError(tryToString(argument) + ' is not iterable');\n};","map":{"version":3,"sources":["/Users/i/Desktop/angular/ang-full-ecom/03-frontend/angular-ecommerce/node_modules/core-js-pure/internals/get-iterator.js"],"names":["call","require","aCallable","anObject","tryToString","getIteratorMethod","$TypeError","TypeError","module","exports","argument","usingIterator","iteratorMethod","arguments","length"],"mappings":"AAAA,IAAIA,IAAI,GAAGC,OAAO,CAAC,4BAAD,CAAlB;;AACA,IAAIC,SAAS,GAAGD,OAAO,CAAC,yBAAD,CAAvB;;AACA,IAAIE,QAAQ,GAAGF,OAAO,CAAC,wBAAD,CAAtB;;AACA,IAAIG,WAAW,GAAGH,OAAO,CAAC,4BAAD,CAAzB;;AACA,IAAII,iBAAiB,GAAGJ,OAAO,CAAC,kCAAD,CAA/B;;AAEA,IAAIK,UAAU,GAAGC,SAAjB;;AAEAC,MAAM,CAACC,OAAP,GAAiB,UAAUC,QAAV,EAAoBC,aAApB,EAAmC;AAClD,MAAIC,cAAc,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAnB,GAAuBT,iBAAiB,CAACK,QAAD,CAAxC,GAAqDC,aAA1E;AACA,MAAIT,SAAS,CAACU,cAAD,CAAb,EAA+B,OAAOT,QAAQ,CAACH,IAAI,CAACY,cAAD,EAAiBF,QAAjB,CAAL,CAAf;AAC/B,QAAMJ,UAAU,CAACF,WAAW,CAACM,QAAD,CAAX,GAAwB,kBAAzB,CAAhB;AACD,CAJD","sourcesContent":["var call = require('../internals/function-call');\nvar aCallable = require('../internals/a-callable');\nvar anObject = require('../internals/an-object');\nvar tryToString = require('../internals/try-to-string');\nvar getIteratorMethod = require('../internals/get-iterator-method');\n\nvar $TypeError = TypeError;\n\nmodule.exports = function (argument, usingIterator) {\n  var iteratorMethod = arguments.length < 2 ? getIteratorMethod(argument) : usingIterator;\n  if (aCallable(iteratorMethod)) return anObject(call(iteratorMethod, argument));\n  throw $TypeError(tryToString(argument) + ' is not iterable');\n};\n"]},"metadata":{},"sourceType":"script"}