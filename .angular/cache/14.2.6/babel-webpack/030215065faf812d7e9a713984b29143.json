{"ast":null,"code":"'use strict';\n\nvar $ = require('../internals/export');\n\nvar isArray = require('../internals/is-array');\n\nvar isConstructor = require('../internals/is-constructor');\n\nvar isObject = require('../internals/is-object');\n\nvar toAbsoluteIndex = require('../internals/to-absolute-index');\n\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\n\nvar toIndexedObject = require('../internals/to-indexed-object');\n\nvar createProperty = require('../internals/create-property');\n\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\n\nvar nativeSlice = require('../internals/array-slice');\n\nvar HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('slice');\nvar SPECIES = wellKnownSymbol('species');\nvar $Array = Array;\nvar max = Math.max; // `Array.prototype.slice` method\n// https://tc39.es/ecma262/#sec-array.prototype.slice\n// fallback for not array-like ES3 strings and DOM objects\n\n$({\n  target: 'Array',\n  proto: true,\n  forced: !HAS_SPECIES_SUPPORT\n}, {\n  slice: function slice(start, end) {\n    var O = toIndexedObject(this);\n    var length = lengthOfArrayLike(O);\n    var k = toAbsoluteIndex(start, length);\n    var fin = toAbsoluteIndex(end === undefined ? length : end, length); // inline `ArraySpeciesCreate` for usage native `Array#slice` where it's possible\n\n    var Constructor, result, n;\n\n    if (isArray(O)) {\n      Constructor = O.constructor; // cross-realm fallback\n\n      if (isConstructor(Constructor) && (Constructor === $Array || isArray(Constructor.prototype))) {\n        Constructor = undefined;\n      } else if (isObject(Constructor)) {\n        Constructor = Constructor[SPECIES];\n        if (Constructor === null) Constructor = undefined;\n      }\n\n      if (Constructor === $Array || Constructor === undefined) {\n        return nativeSlice(O, k, fin);\n      }\n    }\n\n    result = new (Constructor === undefined ? $Array : Constructor)(max(fin - k, 0));\n\n    for (n = 0; k < fin; k++, n++) if (k in O) createProperty(result, n, O[k]);\n\n    result.length = n;\n    return result;\n  }\n});","map":{"version":3,"sources":["/Users/i/Desktop/angular/ang-full-ecom/03-frontend/angular-ecommerce/node_modules/core-js-pure/modules/es.array.slice.js"],"names":["$","require","isArray","isConstructor","isObject","toAbsoluteIndex","lengthOfArrayLike","toIndexedObject","createProperty","wellKnownSymbol","arrayMethodHasSpeciesSupport","nativeSlice","HAS_SPECIES_SUPPORT","SPECIES","$Array","Array","max","Math","target","proto","forced","slice","start","end","O","length","k","fin","undefined","Constructor","result","n","constructor","prototype"],"mappings":"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","sourcesContent":["'use strict';\nvar $ = require('../internals/export');\nvar isArray = require('../internals/is-array');\nvar isConstructor = require('../internals/is-constructor');\nvar isObject = require('../internals/is-object');\nvar toAbsoluteIndex = require('../internals/to-absolute-index');\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar createProperty = require('../internals/create-property');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\nvar nativeSlice = require('../internals/array-slice');\n\nvar HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('slice');\n\nvar SPECIES = wellKnownSymbol('species');\nvar $Array = Array;\nvar max = Math.max;\n\n// `Array.prototype.slice` method\n// https://tc39.es/ecma262/#sec-array.prototype.slice\n// fallback for not array-like ES3 strings and DOM objects\n$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT }, {\n  slice: function slice(start, end) {\n    var O = toIndexedObject(this);\n    var length = lengthOfArrayLike(O);\n    var k = toAbsoluteIndex(start, length);\n    var fin = toAbsoluteIndex(end === undefined ? length : end, length);\n    // inline `ArraySpeciesCreate` for usage native `Array#slice` where it's possible\n    var Constructor, result, n;\n    if (isArray(O)) {\n      Constructor = O.constructor;\n      // cross-realm fallback\n      if (isConstructor(Constructor) && (Constructor === $Array || isArray(Constructor.prototype))) {\n        Constructor = undefined;\n      } else if (isObject(Constructor)) {\n        Constructor = Constructor[SPECIES];\n        if (Constructor === null) Constructor = undefined;\n      }\n      if (Constructor === $Array || Constructor === undefined) {\n        return nativeSlice(O, k, fin);\n      }\n    }\n    result = new (Constructor === undefined ? $Array : Constructor)(max(fin - k, 0));\n    for (n = 0; k < fin; k++, n++) if (k in O) createProperty(result, n, O[k]);\n    result.length = n;\n    return result;\n  }\n});\n"]},"metadata":{},"sourceType":"script"}